"""
Задание 4.
Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.
Сделайте профилировку каждого алгоритма через timeit
Попытайтесь написать третью версию, которая будет самой быстрой.
Сделайте замеры и опишите, получилось ли у вас ускорить задачу.
Без аналитики задание считается не принятым!
"""

# func_2 = n * (n + 1) + n + n
# func_1 = n * (n + 1)
# func_3 = n * (n) + n

# Вторая функция самая долгая, потому что помимо квадратичной сложности полученной при взаимодействии цикла и
# функции count() в ней также метод append() повторяется n раз, а также в конце функции выполняются две операции
# с линейной сложностью.
# Первая функция работает значительно быстрее второй, потому что при всё той же квадратичной сложности,
# в ней уже n раз выполняется не append(), а простые операции сравнения.
# К тому же в первой функции нет конечных операций с линейной сложностью.
# Моя функция (третья) выполняется чуть медленнее первой при небольшом размере списка, но быстрее уже при длине
# списка в 2 раза бОльшей, чем у списка представленного в задании. Связанно это с тем, что при бОльшей длине
# время на операцию с линейной сложностью в конце функции невелируется более быстро работающей составляющей с
# квадратичной сложностью (max и count), чем составляющая с этой же сложностью в первой функции.


from timeit import timeit

array = [1, 3, 1, 3, 4, 5, 1]
# array = [1, 3, 1, 3, 4, 5, 1, 6, 7, 6, 8, 9, 7, 10]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    num = max(array, key=array.count)
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {array.count(num)} раз(а)'


print(timeit('func_1()', globals=globals()))
print(timeit('func_2()', globals=globals()))
print(timeit('func_3()', globals=globals()))