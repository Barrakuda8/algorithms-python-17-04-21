"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""


def check_1(dct):  # O(1) - всё постоянное
    while True:
        user = input('Введите логин: ')
        try:
            user = dct[user]
            break
        except KeyError:
            pass
    if user['activation']:
        for _ in range(5):
            password = input('Введите пароль: ')
            if user['password'] == password:
                print('Вы вошли')
                break
    else:
        answer = input('Хотите активировать учётную запись?: ')
        if answer.lower() == 'да':
            user['activation'] = True
            print('Ваша учётная запись активирована')


def check_2(dct):  # O(n) - линейный только цикл по перебору ключей словаря, остальное всё постоянное

    def login_check():
        for _ in range(5):
            user = input('Введите логин: ')
            for key in dct:
                if key == user:
                    return user
        print("Превышено количество попыток")

    user = login_check()
    if dct[user]['activation']:
        for _ in range(5):
            password = input('Введите пароль: ')
            if dct[user]['password'] == password:
                print('Вы вошли')
                break
    else:
        answer = input('Хотите активировать учётную запись?: ')
        if answer.lower() == 'да':
            dct[user]['activation'] = True
            print('Ваша учётная запись активирована')


# Задание сложнее предыдущего по вариативности на мой взгляд, поэтому варианты весьма похожи.
# Засчёт цикла while True первый вариант может выполняться бесконечно, поэтому второй вариант предпочтительней.
# Хотя по сути лучший решением была бы комбинация, где во втором варианте при вводе логина, используются не два цикла for, а цикл for и try/except


users = {'login1': {'password': 'pass1', 'activation': True}, 'login2': {'password': 'pass2', 'activation': False}}
check_1(users)
print(users)